{"version":3,"file":"static/js/588.6ebed4a8.chunk.js","mappings":"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","sources":["components/Form.styled.jsx","components/Filter/Filter.styled.jsx","pages/ContactsPage/ContactsPage.styled.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Modal/Modal.styled.jsx","components/ContactForm/ContactForm.jsx","components/Modal/Modal.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { ErrorMessage, Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormTitle = styled.h2`\n  font-family: 'Megrim';\n  font-weight: normal;\n  font-size: 48px;\n  margin-bottom: 24px;\n  animation: pulsate 1.5s infinite alternate;\n`;\n\nexport const Wrapper = styled.div`\n  margin: 32px auto 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 480px;\n  border: 2px solid white;\n  border-radius: 12px;\n  padding: 40px 32px;\n`;\n\nexport const InputBox = styled.div`\n  position: relative;\n  width: 400px;\n`;\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  position: absolute;\n  top: 0;\n  left: 0;\n  padding: 10px 0;\n  font-size: 20px;\n  color: green;\n  pointer-events: none;\n  transition: 0.5s;\n`;\n\nexport const Border = styled.span`\n  position: absolute;\n  bottom: 30px;\n  left: 50%;\n  width: 0;\n  height: 1px;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  padding: 10px 0;\n  font-size: 20px;\n  color: green;\n  margin-bottom: 30px;\n  border: none;\n  border-bottom: 1px solid gray;\n  outline: none;\n  background: transparent;\n\n  &:focus ~ ${Label}, &:valid ~ ${Label} {\n    top: -20px;\n    left: 0;\n    color: lightblue;\n    font-size: 12px;\n  }\n\n  &:focus ~ ${Border}, &:valid ~ ${Border} {\n    width: 100%;\n    transition: 0.4s;\n    left: 0;\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 20px 0;\n  font-family: inherit;\n  color: var(--basic-white);\n  width: 200px;\n  height: 32px;\n  padding: 4px 10px;\n  font-size: 20px;\n  font-weight: 500;\n  background: transparent;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  position: relative;\n  display: inline-block;\n  color: green;\n  border: 1px solid var(--basic-color);\n\n  z-index: 1;\n\n  &:after {\n    position: absolute;\n    content: '';\n    width: 0;\n    height: 100%;\n    top: 0;\n    right: 0;\n    z-index: -1;\n    background: lightblue;\n\n    transition: all 0.3s ease;\n  }\n\n  &:hover {\n    color: lightblue;\n  }\n  &:hover:after {\n    left: 0;\n    width: 100%;\n  }\n  &:active {\n    top: 2px;\n  }\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n  width: 80%;\n  color: red;\n  text-align: center;\n  margin-bottom: 8px;\n  &::first-letter {\n    text-transform: uppercase;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Megrim', cursive;\n  font-weight: bold;\n  font-size: 2rem;\n  color: #ffffff;\n  margin-bottom: 8px;\n`;\n\nexport const FilterField = styled.input`\n  width: 300px;\n  font-family: inherit;\n  font-size: 16px;\n  padding: 10px;\n  background-color: #ffffff;\n  color: var(--basic-color);\n  outline: none;\n  border: 2px solid #3498db;\n  border-radius: 8px;\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\n\n  &:focus {\n    border-color: #2980b9;\n    box-shadow: 0 0 0.2rem rgba(0, 123, 255, 0.7);\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-family: 'Megrim', cursive;\n  font-weight: bold;\n  font-size: 3rem;\n  margin: 20px 0 0;\n  text-align: center;\n  color: #ffffff; /* Білий колір */\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  height: 100vh;\n  background: linear-gradient(45deg, #3498db, #2ecc71);\n`;\n\nexport const AddButton = styled.button`\n  width: 100px;\n  height: 40px;\n  margin-top: 35px;\n  background-color: #ffffff; /* Білий колір */\n  color: #3498db; /* Яскраво-синій колір */\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  box-shadow: 0 0 0.2rem #ffffff, 0 0 1rem #3498db;\n  transition: all 300ms ease-in-out;\n\n  &:hover {\n    background-color: #3498db; /* Яскраво-синій колір */\n    color: #ffffff; /* Білий колір */\n    box-shadow: 0 0 0.2rem #3498db, 0 0 1rem #ffffff;\n  }\n`;\n\nexport const TitleGroup = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 40px;\n`;\n","import { FilterField, Wrapper } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateFilterAction } from '../../redux/contacts/filterSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { Title } from 'pages/ContactsPage/ContactsPage.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilter = e => {\n    dispatch(updateFilterAction(e.target.value));\n  };\n\n  return (\n    <Wrapper>\n      <Title>Find contacts by name</Title>\n      <FilterField type=\"text\" value={filter} onChange={handleFilter} />\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\n// Стилі для самого елементу\nexport const Item = styled.div`\n  background-color: #ffffff; /* Білий колір */\n  padding: 16px;\n  margin: 8px 0;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\n// Стилі для тексту контакту\nexport const ContactText = styled.span`\n  font-weight: bold;\n  font-size: 1.2rem;\n`;\n\n// Стилі для кнопки видалення\nexport const ButtonDelete = styled.button`\n  background-color: #3498db; /* Яскраво-синій колір */\n  color: #ffffff; /* Білий колір */\n  border: none;\n  padding: 10px;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #2980b9; /* Темно-синій колір при наведенні */\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { ButtonDelete, Item, ContactText } from './ContactItem.styled';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const onDeleteContact = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <Item>\n      <ContactText>\n        {contact.name}: {contact.number}\n      </ContactText>\n      <ButtonDelete type=\"button\" onClick={onDeleteContact}>\n        Delete\n      </ButtonDelete>\n    </Item>\n  );\n};\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport {\n  selectError,\n  selectFilteredContacts,\n} from '../../redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filterContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {error && <p>Please, try again.</p>}\n      <ul>\n        {filterContacts.map(contact => (\n          <ContactItem contact={contact} key={contact.id} />\n        ))}\n      </ul>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ModalContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 500px;\n  padding: 24px;\n  background-color: #ffffff; /* Змінено на білий колір для видимості контенту */\n  border: 2px solid var(--basic-white);\n  border-radius: 12px;\n  box-shadow: 0 0 0.2rem var(--basic-white), 0 0 0.2rem var(--basic-white),\n    0 0 2rem var(--basic-color), 0 0 0.8rem var(--basic-color),\n    0 0 2.8rem var(--basic-color), inset 0 0 1.3rem var(--basic-color);\n\n  @media (max-width: 600px) {\n    width: 90%;\n  }\n`;\n\nexport const Backdrop = styled.div`\n  z-index: 1200;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(\n    0,\n    0,\n    0,\n    0.5\n  ); /* Змінено на менш прозорий чорний фон */\n`;\n\nexport const CloseButton = styled.button`\n  align-self: flex-end;\n  margin-bottom: 16px;\n  background-color: inherit;\n  color: var(--basic-color);\n  border: none;\n  cursor: pointer;\n\n  &:hover {\n    color: #ffffff;\n  }\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport 'yup-phone-lite';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport {\n  Border,\n  Button,\n  ErrorMessageStyled,\n  FormStyled,\n  Input,\n  InputBox,\n  Label,\n} from 'components/Form.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst validationSchema = yup.object().shape({\n  name: yup.string().min(2).max(30).required('A name is required'),\n  number: yup\n    .string()\n    .phone('UA', true, 'Invalid Ukrainian phone number')\n    .required('A phone number is required'),\n});\n\nexport const ContactForm = ({ closeModal }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const addNewContact = newContact => {\n    const isExist = contacts.find(\n      contact =>\n        contact.name.toLowerCase() === newContact.name.toLowerCase().trim()\n    );\n\n    if (isExist) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact(newContact));\n  };\n\n  const handleSubmit = values => {\n    addNewContact(values);\n    closeModal();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={validationSchema}\n    >\n      <FormStyled>\n        <InputBox>\n          <Input type=\"text\" name=\"name\" required />\n          <Label htmlFor=\"name\">Name</Label>\n          <Border></Border>\n        </InputBox>\n\n        <InputBox>\n          <Input type=\"tel\" name=\"number\" required />\n          <Label htmlFor=\"number\">Phone number</Label>\n          <Border></Border>\n        </InputBox>\n\n        <Button type=\"submit\" aria-label=\"add contact\">\n          Add contact\n        </Button>\n\n        <ErrorMessageStyled name=\"name\" component=\"div\" />\n        <ErrorMessageStyled name=\"number\" component=\"div\" />\n      </FormStyled>\n    </Formik>\n  );\n};\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Backdrop, CloseButton, ModalContainer } from './Modal.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ closeModal }) => {\n  const handleBackdropClose = e => {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  };\n\n  useEffect(() => {\n    const handleCloseByEsc = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n    window.addEventListener('keydown', handleCloseByEsc);\n\n    return () => {\n      window.removeEventListener('keydown', handleCloseByEsc);\n    };\n  }, [closeModal]);\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClose}>\n      <ModalContainer>\n        <CloseButton\n          type=\"button\"\n          aria-label=\"Close window\"\n          onClick={closeModal}\n        >\n          Close\n        </CloseButton>\n        <ContactForm closeModal={closeModal} />\n      </ModalContainer>\n    </Backdrop>,\n    modalRoot\n  );\n};\n","import { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { AddButton, Title, TitleGroup, Wrapper } from './ContactsPage.styled';\nimport { Modal } from 'components/Modal/Modal';\nimport { useState } from 'react';\n\nconst ContactsPage = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <Wrapper>\n      <Filter />\n      <TitleGroup>\n        <Title>Contacts</Title>\n        <AddButton\n          type=\"button\"\n          aria-label=\"Add Contact\"\n          onClick={handleOpenModal}\n        >\n          Add contact\n        </AddButton>\n      </TitleGroup>\n      <ContactList />\n      {isModalOpen && <Modal closeModal={closeModal} />}\n    </Wrapper>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["FormTitle","styled","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","InputBox","_templateObject3","FormStyled","Form","_templateObject4","Label","_templateObject5","Border","_templateObject6","Input","Field","_templateObject7","Button","_templateObject8","ErrorMessageStyled","ErrorMessage","_templateObject9","FilterField","Title","AddButton","TitleGroup","Filter","dispatch","useDispatch","filter","useSelector","selectFilter","_jsxs","children","_jsx","type","value","onChange","e","updateFilterAction","target","Item","ContactText","ButtonDelete","ContactItem","_ref","contact","name","number","onClick","deleteContact","id","ContactList","filterContacts","selectFilteredContacts","error","selectError","useEffect","fetchContacts","_Fragment","map","ModalContainer","Backdrop","CloseButton","initialValues","validationSchema","yup","shape","min","max","required","phone","ContactForm","closeModal","contacts","selectContacts","Formik","onSubmit","values","newContact","find","toLowerCase","trim","alert","concat","addContact","htmlFor","component","modalRoot","document","querySelector","Modal","handleCloseByEsc","code","window","addEventListener","removeEventListener","createPortal","currentTarget","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen"],"sourceRoot":""}